import static org.junit.Assert.assertEquals;
import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.Test;

public class GOLTester {

    /*------------------- Arrays to be used in test cases -------------------*/

    int[][] A1 = {{0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0},
            {0, 1, 1, 1, 0},
            {0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0}};

    int[][] A2 = {{0, 0, 0, 0, 0},
            {0, 0, 1, 0, 0},
            {0, 0, 1, 0, 0},
            {0, 0, 1, 0, 0},
            {0, 0, 0, 0, 0}};

    int[][] B1 = {{0, 0, 0, 0, 0, 0,},
            {0, 0, 0, 0, 0, 0,},
            {0, 0, 1, 1, 1, 0,},
            {0, 1, 1, 1, 0, 0,},
            {0, 0, 0, 0, 0, 0,},
            {0, 0, 0, 0, 0, 0,}};

    int[][] B2 = {{0, 0, 0, 0, 0, 0,},
            {0, 0, 0, 1, 0, 0,},
            {0, 1, 0, 0, 1, 0,},
            {0, 1, 0, 0, 1, 0,},
            {0, 0, 1, 0, 0, 0,},
            {0, 0, 0, 0, 0, 0,}};

    int[][] C1 = {{0, 0, 0, 0, 0, 0,},
            {0, 1, 1, 0, 0, 0,},
            {0, 1, 1, 0, 0, 0,},
            {0, 0, 0, 1, 1, 0,},
            {0, 0, 0, 1, 1, 0,},
            {0, 0, 0, 0, 0, 0,}};

    int[][] C2 = {{0, 0, 0, 0, 0, 0,},
            {0, 1, 1, 0, 0, 0,},
            {0, 1, 0, 0, 0, 0,},
            {0, 0, 0, 0, 1, 0,},
            {0, 0, 0, 1, 1, 0,},
            {0, 0, 0, 0, 0, 0,}};

    int[][] D1 = {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0},
            {0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0},
            {0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0},
            {0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0},
            {0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0},
            {0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0},
            {0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};

    int[][] D2 = {{0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
            {0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
            {0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}};

    int[][] E1 = {{1, 1, 0, 0, 0, 0},
            {0, 1, 1, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 1, 1, 0},
            {0, 0, 0, 0, 1, 1}};

    int[][] E2 = {{1, 1, 1, 0, 0, 0},
            {1, 1, 1, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 0, 0, 0},
            {0, 0, 0, 1, 1, 1},
            {0, 0, 0, 1, 1, 1}};


    /*------------------- Start of test cases -------------------*/


    @Test
    public void oneStepTest1() {
        GameOfLife check = new GameOfLife(A1);
        check.oneStep();
        assertArrayEquals(A2, check.getBoard());
    }

   @Test
   public void oneStepTest2() {
       GameOfLife check = new GameOfLife(B2);
       check.oneStep();
       assertArrayEquals(B1, check.getBoard());
   }

    @Test
    public void oneStepTest3() {
        GameOfLife check = new GameOfLife(C1);
        check.oneStep();
        assertArrayEquals(C2, check.getBoard());
    }

    @Test
    public void oneStepTest4() {
        GameOfLife check = new GameOfLife(D1);
        check.oneStep();
        assertArrayEquals(D2, check.getBoard());
    }

    @Test
    public void oneStepTest5() {
        GameOfLife check = new GameOfLife(E1);
        check.oneStep();
        assertArrayEquals(E2, check.getBoard());
    }

}
